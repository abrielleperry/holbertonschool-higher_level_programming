The 0-add_integer.py module
======================

Using the add_integer function
-------------------

add_integer returns 2 integers module:

    >>> add_integer = __import__('0-add_integer').add_integer


Correct use:
=============================

    >>> add_integer(6)
    104

    >>> add_integer(8, 2)
    10

    >>> add_integer(98)
    196

    >>> add_integer(7.77, 5)
    12

    >>> add_integer(2.2, 8)
    10

Incorret Use:
===============================

Testing if a was string
>>> add_integer("hello")
Traceback (most recent call last):
TypeError: a must be an integer

Testing if be was a string
>>> add_integer(7, "hello")
Traceback (most recent call last):
TypeError: b must be an integer

Testing if float is infinitie
>>> add_integer(float('inf'), 3)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

Testing if float is not a number
>>> add_integer(float('nan'), 3)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

Testing if no arguments are given
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

Testing if more than 2 arguments are given
>>> add_integer(3, 4, 5)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given