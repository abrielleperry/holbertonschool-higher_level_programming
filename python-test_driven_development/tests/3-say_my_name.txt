The 3-say_my_name.py module
======================

Using the say_my_name function
-------------------

say_my_name returns first and last name that must be strings module:

>>> say_my_name = __import__('3-say_my_name').say_my_name

Correct use:
=============================


    >>> say_my_name("Abrielle", "Perry")
    Abrielle Perry

    >>> say_my_name("Opal", "Carrington")
    Opal Carrington

    >>> say_my_name("Zach")
    Zach

    

Incorret Use:
===============================

Testing if first_name was integer
>>> say_my_name(7, "Perry")
Traceback (most recent call last):
TypeError: first_name must be string

Testing if last_name was integer
>>> add_integer("Abriele", 7)
Traceback (most recent call last):
TypeError: last_name must be string

Testing if float is infinitie
>>> add_integer(float('inf'), 3)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

Testing if float is not a number
>>> add_integer(float('nan'), 3)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

Testing if no arguments are given
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

Testing if more than 2 arguments are given
>>> add_integer(3, 4, 5)
Traceback (most recent call last):
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given