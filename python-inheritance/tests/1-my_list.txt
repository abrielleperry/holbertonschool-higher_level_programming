The "1-my_list.py" doctest module
======================

Creating a class MyList that inherits from list
-------------------

Import my_list function to doctest
>>> MyList = __import__('1-my_list').MyList

my_list.print_sorted sorted list in ascendig order

Correct use:
=============================
    Testing for list of all integer elements
    >>> my_list = MyList([5, 7, 12, 3, 24])
    >>> my_list.print_sorted()
    [3, 5, 7, 12, 24]

    Testing for no elements
    >>> my_list = MyList([])
    >>> my_list.print_sorted()
    []

    Testing for one element
    >>> my_list = MyList([777])
    >>> my_list.print_sorted()
    [777]





Incorret Use:
===============================

Testing for not a list
>>> mylist = MyList(62)
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: int object is not iterable

Testing for list of elements that are not integers
>>> mylist = MyList([7, 0, "lucky", 12])
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: does not support instances of str and int 
